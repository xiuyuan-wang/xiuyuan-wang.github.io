(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{327:function(n,e,a){"use strict";a.r(e);var t=a(14),i=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("H5 调用摄像头\n")]),n._v(" "),e("p",[n._v("WebRTC（Web Real-Time Communication，网页实时通信），是一个支持网页浏览器进行实时语音对话或视频对话的API。")]),n._v(" "),e("p",[n._v("1、getUserMedia\n要播放摄像头的影像，首先需要一个video标签：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('<video id="video"></video>\n')])])]),e("p",[n._v("获取摄像头影像主要是通过navigator.getUserMedia这个接口，这个接口的支持情况已经逐渐变好了：点这里")]),n._v(" "),e("p",[n._v("不过，使用的时候还是要加上前缀的，兼容代码：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("navigator.getUserMedia =  navigator.getUserMedia\n                         || navigator.webkitGetUserMedia\n                         || navigator.mozGetUserMedia;\n\n语法： navigator.getUserMedia(constraints, successCallback, errorCallback);\n　参数说明：\n")])])]),e("p",[n._v("constraints：Object类型，指定了请求使用媒体的类型\nsucceCallback：启用成功时的函数，它传入一个参数，为视频流对象，可以进一步通过window.URL.createObjectURL()接口把视频流转换为对象URL。\nerrorCallback：启动失败时的函数。它传入一个参数，为错误对象（chrome）或错误信息字符串（Firefox），可能值：\n　PERMISSION_DENIED：用户拒绝提供信息。")]),n._v(" "),e("p",[n._v("NOT_SUPPORTED_ERROR：浏览器不支持硬件设备。")]),n._v(" "),e("p",[n._v("MANDATORY_UNSATISFIED_ERROR：无法发现指定的硬件设备。")]),n._v(" "),e("p",[n._v("例如：要启用视频设备（摄像头），可这样：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("navigator.getUserMedia({  \n  video: true \n});\n")])])]),e("p",[n._v("如果要同时启用视频设备和音频设备，可这样：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("  navigator.getUserMedia({  \n    video: true,  \n    audio: true \n  });\n")])])]),e("p",[n._v("2、 获取摄像头")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("var URL = window.URL || window.webkitURL; // 获取到window.URL对象   \nnavigator.getUserMedia({  \n  video: true  \n}, function(stream) {  \n  video.src = URL.createObjectURL(stream);// 将获取到的视频流对象转换为地址  \n  video.play();     \n}, function(error) {  \n  console.log(error.name || error);  \n});\n")])])]),e("p",[n._v("3 截图\n除了实时直播外，我们还可以做实时截图效果，这时我们需要利用"),e("canvas",[n._v("元素来画图，代码如下：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("<canvas id=\"canvas\"></canvas>\n\nvar canvas = document.getElementById('canvas');  \nvar ctx = canvas.getContext('2d');  \nvar width = video.width;  \nvar height = video.height;  \ncanvas.width = width;  \ncanvas.height = height;\n\nctx.drawImage(video, 0, 0, width, height);\n")])])]),e("p",[n._v("4、 保存图片\n当然，截图后，你也可以保存下来：\n　　\n"),e("a",{attrs:{download:"snap.png",id:"download"}},[n._v("下载图片")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("var url = canvas.toDataURL('image/png'); \ndocument.getElementById('download').src = url;\n")])])]),e("p",[n._v("5、 完整实例\n实例代码（由于安全限制问题，请将代码复制到本地运行）：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('  <!DOCTYPE html> \n  <html>  \n    <head>  \n      <meta charset="UTF-8">  \n      <title></title>  \n      <style>\n        #canvas,#video {\n          float: left;  \n          margin-right: 10px;  \n          background: #fff;  \n        }      \n        .box {  \n          overflow: hidden;  \n          margin-bottom: 10px;  \n        }\n      </style>\n    </head>  \n    <body>  \n      <div class="box">\n        <video id="video" width="400" height="300"></video>\n        <canvas id="canvas"></canvas>\n      </div>\n      <button id="live">直播</button>\n      <button id="snap">截图</button>\n      <script>  \n        var video = document.getElementById(\'video\');\n        var canvas = document.getElementById(\'canvas\');  \n        var ctx = canvas.getContext(\'2d\');  \n        var width = video.width;  \n        var height = video.height;  \n        canvas.width = width;  \n        canvas.height = height;   \n        function liveVideo(){  \n          var URL = window.URL || window.webkitURL;   // 获取到window.URL对象\n          navigator.getUserMedia({  \n            video: true  \n          }, function(stream){  \n            video.src = URL.createObjectURL(stream);   // 将获取到的视频流对象转换为地址\n            video.play();   // 播放\n            //点击截图     \n            document.getElementById("snap").addEventListener(\'click\', function() {  \n              ctx.drawImage(video, 0, 0, width, height);  \n              var url = canvas.toDataURL(\'image/png\');  \n              document.getElementById(\'download\').href = url;  \n            });\n          }, function(error){  \n            console.log(error.name || error);  \n          });  \n        }  \n        document.getElementById("live").addEventListener(\'click\',function(){  \n          liveVideo();  \n        });    \n      <\/script>  \n    </body> \n  </html>')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);