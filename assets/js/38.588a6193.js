(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{346:function(t,a,s){"use strict";s.r(a);var r=s(14),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("回溯算法\n")]),t._v(" "),a("p",[t._v("从解决问题每一步的所有可能选项里系统选择出一个可行的解决方案。")]),t._v(" "),a("p",[t._v("在某一步选择一个选项后，进入下一步，然后面临新的选项。重复选择，直至达到最终状态。")]),t._v(" "),a("p",[t._v("回溯法解决的问题的所有选项可以用树状结构表示。")]),t._v(" "),a("ul",[a("li",[t._v("在某一步有n个可能的选项，该步骤可看作树中一个节点。")]),t._v(" "),a("li",[t._v("节点每个选项看成节点连线，到达它的n个子节点。")]),t._v(" "),a("li",[t._v("叶节点对应终结状态。")]),t._v(" "),a("li",[t._v("叶节点满足约束条件，则为一个可行的解决方案。")]),t._v(" "),a("li",[t._v("叶节点不满足约束条件，回溯到上一个节点，并尝试其他叶子节点。")]),t._v(" "),a("li",[t._v("节点所有子节点均不满足条件，再回溯到上一个节点。")]),t._v(" "),a("li",[t._v("所有状态均不能满足条件，问题无解。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/blog/20190506/1.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"二叉树中和为某一值的路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树中和为某一值的路径"}},[t._v("#")]),t._v(" 二叉树中和为某一值的路径")]),t._v(" "),a("h5",{attrs:{id:"字符串的排列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的排列"}},[t._v("#")]),t._v(" 字符串的排列")]),t._v(" "),a("h5",{attrs:{id:"和为sum的n个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和为sum的n个数"}},[t._v("#")]),t._v(" 和为sum的n个数")]),t._v(" "),a("h5",{attrs:{id:"矩阵中的路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵中的路径"}},[t._v("#")]),t._v(" 矩阵中的路径")]),t._v(" "),a("h5",{attrs:{id:"机器人的运动范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器人的运动范围"}},[t._v("#")]),t._v(" 机器人的运动范围")]),t._v(" "),a("h5",{attrs:{id:"n皇后问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n皇后问题"}},[t._v("#")]),t._v(" N皇后问题")])])}),[],!1,null,null,null);a.default=v.exports}}]);