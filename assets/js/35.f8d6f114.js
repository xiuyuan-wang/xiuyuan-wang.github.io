(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{360:function(e,t,a){"use strict";a.r(t);var s=a(14),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("vue源码分析 - observer,dep,watch,实现数据双向绑定\n")]),e._v(" "),t("p",[e._v("我们把双向数据绑定分为两个流程：")]),e._v(" "),t("h4",{attrs:{id:"_1、收集依赖流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、收集依赖流程"}},[e._v("#")]),e._v(" 1、收集依赖流程：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("    observe -> \n    walk -> \n    defineReactive -> \n    get -> \n    dep.depend() -> \n    watcher.addDep(new Dep()) -> \n    watcher.newDeps.push(dep) -> \n    dep.addSub(new Watcher()) -> \n    dep.subs.push(watcher)\n")])])]),t("p",[e._v("依赖收集会经过以上流程，最终watcher.newDeps数组中存放dep列表，dep.subs数组中存放watcher列表。")]),e._v(" "),t("h6",{attrs:{id:"为什么要进行依赖收集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行依赖收集"}},[e._v("#")]),e._v(" 为什么要进行依赖收集？")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("    new Vue({\n        data(){\n            return {\n                name:'zane',\n                sex:'男'\n            }\n        }\n    })\n")])])]),t("p",[e._v("有上面这个data，实际上页面只使用到了name，并没有使用age，根据Object.defineProperty的转换，如果我们设置了this.sex='女'，那么Vue也会去执行一遍虚拟DOM的比较，这样就无形的浪费了一些性能，因此才需要做依赖收集，界面用到了就收集，没有用到就不收集。")]),e._v(" "),t("p",[e._v("我们跟着流程走来理一遍源码：")]),e._v(" "),t("p",[e._v("直接进入Object.defineProperty的get方法：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/20190401/1.png",alt:""}})]),e._v(" "),t("p",[e._v("考验你闭包能力的时候到了，这个dep对象就是一个闭包。记下来我们看看dep.depend()方法的实现。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/20190401/2.png",alt:""}})]),e._v(" "),t("p",[e._v("先暂停一下，上面两处都用到了 Dep.target ，我也说了它就是一个Watcher实例化对象，你是不是很想搞懂它到底在哪里赋值的呢，不急请跟着我下面的代码看看。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/20190401/3.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/4.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/5.png",alt:""}})]),e._v(" "),t("p",[e._v("搞懂了Dep.target等于一个Watche对象，现在继续回到之前的思路看watcher.addDep做了什么。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/20190401/6.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/7.png",alt:""}})]),e._v(" "),t("p",[e._v("就这样依赖收集的流程就走完了，是否感觉很绕。")]),e._v(" "),t("h6",{attrs:{id:"总结-依赖收集最终在-watcher-newdeps-中push了闭包中传过来的dep对象-在dep-subs中push了初始化vue是简历的watcher对象-这个对象的-this-getter-exporfn-传过来的exporfn是后期数据更新页面渲染的核心步骤-需要沉下心来好好去理理。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-依赖收集最终在-watcher-newdeps-中push了闭包中传过来的dep对象-在dep-subs中push了初始化vue是简历的watcher对象-这个对象的-this-getter-exporfn-传过来的exporfn是后期数据更新页面渲染的核心步骤-需要沉下心来好好去理理。"}},[e._v("#")]),e._v(" 总结：依赖收集最终在 watcher.newDeps 中push了闭包中传过来的dep对象，在dep.subs中push了初始化Vue是简历的Watcher对象，这个对象的，this.getter = expOrFn,传过来的expOrFn是后期数据更新页面渲染的核心步骤，需要沉下心来好好去理理。")]),e._v(" "),t("h4",{attrs:{id:"_2、视图更新流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、视图更新流程"}},[e._v("#")]),e._v(" 2、视图更新流程：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("    set -> \n    dep.notify() -> \n    subs[i].update() -> \n    watcher.run() || queueWatcher(this) -> \n    watcher.get() || watcher.cb -> \n    watcher.getter() -> \n    vm._update() -> \n    vm.__patch__()\n")])])]),t("p",[e._v("视图更新会经过以上流程，最终调用Vue的虚拟Dom diff过程实时更新界面视图")]),e._v(" "),t("p",[t("img",{attrs:{src:"/images/blog/20190401/8.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/9.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/10.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/11.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/12.png",alt:""}}),e._v(" "),t("img",{attrs:{src:"/images/blog/20190401/13.png",alt:""}})]),e._v(" "),t("p",[e._v("走到此处后面我就不去跟踪了，后面会调用vm."),t("strong",[e._v("patch")]),e._v(" 方法，进而执行虚拟DOM的diff过程实时的更新界面。")]),e._v(" "),t("h6",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结：")]),e._v(" "),t("p",[e._v("要很好的理解vue的数据双向绑定就要比较耐心，沉下心来慢慢理解，同时也需要对vue的源码有个大致的理解，不然你只会看的越来越烦躁越来越没有信心。vue很好的利用了Object.defineProperty方法的 get和set方法，订阅者发布者的设计思路，巧妙的组织代码，值得我们很深入的去学习和理解，从而促使我们更好的去使用它。谢谢尤大的无私奉献，让我们提高了生产力，把更多的精力花到业务逻辑中去。")])])}),[],!1,null,null,null);t.default=r.exports}}]);